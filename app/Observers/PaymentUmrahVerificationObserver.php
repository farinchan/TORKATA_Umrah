<?php

namespace App\Observers;

use App\Models\UmrahJamaahPayment;
use App\Models\User;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;

class PaymentUmrahVerificationObserver
{
    /**
     * Handle the UmrahJamaahPayment "created" event.
     */
    public function created(UmrahJamaahPayment $umrahJamaahPayment): void
    {
        Log::info('Payment Verification Created: ' . $umrahJamaahPayment->id);

        $jamaah_payment = $umrahJamaahPayment->load('umrahJamaah.user', 'umrahJamaah.umrahSchedule.umrahPackage');

        try {
            $user_admin = User::role(['admin-kantor', 'super-admin'])->get();

            $data = [];
            foreach ($user_admin as $admin) {
                if ($admin->phone) {
                    $data[] = [
                        'to' => whatsappNumber($admin->phone),
                        'text' => "*Pemberitahuan Pembayaran*\n\n" .
                            "Nama Jamaah: " . $jamaah_payment->umrahJamaah->name . "\n" .
                            "ID Jamaah: " . $jamaah_payment->umrahJamaah->code . "\n" .
                            "Paket: " . $jamaah_payment->umrahJamaah->umrahSchedule->umrahPackage->name . "\n" .
                            "Jadwal: " . $jamaah_payment->umrahJamaah->umrahSchedule->name . "\n" .
                            "Tipe Paket: " . $jamaah_payment->umrahJamaah->package_type . "\n\n" .

                            "Pembayaran: " . $jamaah_payment->type . "\n" .
                            "Jumlah: Rp " . number_format($jamaah_payment->amount, 0, ',', '.') . "\n" .
                            'Agen/Staf: ' . $jamaah_payment->umrahJamaah->user->name . "\n" .
                            "Silahkan cek detail pembayaran di dashboard admin anda.\n\n" .
                            "Terima kasih.\n\n" .

                            "_Generated by system: " . env('APP_NAME') . "_"
                    ];
                }
            }


            if (count($data) > 0) {
                $response_wa = Http::post(env('WHATSAPP_API_URL') . "/send-bulk-message", [
                    'session' => env('WHATSAPP_API_SESSION'),
                    'delay' => 2000,
                    'data' => $data
                ]);

                if ($response_wa->status() == 200) {
                    Log::info('Notification sent successfully: ' . $response_wa->body());
                } else {
                    Log::error('Error sending notification: ' . $response_wa->body());
                }
            }
        } catch (\Exception $e) {
            Log::error('Error sending notification: ' . $e->getMessage());
        }
    }

    /**
     * Handle the UmrahJamaahPayment "updated" event.
     */
    public function updated(UmrahJamaahPayment $umrahJamaahPayment): void
    {
        Log::info('Payment Verification Updated: ' . $umrahJamaahPayment->id);

        $jamaah_payment = $umrahJamaahPayment->load('umrahJamaah.umrahSchedule.umrahPackage');

        try {
            $response_wa = Http::post(env('WHATSAPP_API_URL')  . "/send-message", [
                'session' => env('WHATSAPP_API_SESSION'),
                'to' => whatsappNumber($jamaah_payment->umrahJamaah->phone),
                'text' => "Assalamualaikum " . $jamaah_payment->umrahJamaah->name . ",\n" .
                    "Terima Kasih telah memilih kami sebagai mitra perjalanan umroh Anda, kami memberitahukan bahwa pembayaran Anda telah kami " . $jamaah_payment->status . ".\n\n" .
                    "Detail Pembayaran:\n" .
                    "Nama Jamaah: " . $jamaah_payment->umrahJamaah->name . "\n" .
                    "ID Jamaah: " . $jamaah_payment->umrahJamaah->code . "\n" .
                    "Paket: " . $jamaah_payment->umrahJamaah->umrahSchedule->umrahPackage->name . "\n" .
                    "Jadwal: " . $jamaah_payment->umrahJamaah->umrahSchedule->name . "\n" .
                    "Tipe Paket: " . $jamaah_payment->umrahJamaah->package_type . "\n\n" .

                    "Pembayaran: " . $jamaah_payment->type . "\n" .
                    "Jumlah: Rp " . number_format($jamaah_payment->amount, 0, ',', '.') . "\n" .
                    "Status: " . $jamaah_payment->status . "\n" .
                    "Catatan: " . $jamaah_payment->note . "\n\n" .
                    "Silahkan cek data dan detail pembayaran di " . env('APP_URL') . "/payment?q=" . $jamaah_payment->umrahJamaah->code . "\n\n" .
                    "Terima kasih.\n\n" .
                    "_Generated by system: " . env('APP_NAME') . "_"
            ]);

            if ($response_wa->status() == 200) {
                Log::info('Notification sent successfully');
            } else {
                Log::error('Error sending notification: ' . $response_wa->body());
            }
        } catch (\Throwable $th) {
            Log::error('Error sending notification: ' . $th->getMessage());
        }
    }

    /**
     * Handle the UmrahJamaahPayment "deleted" event.
     */
    public function deleted(UmrahJamaahPayment $umrahJamaahPayment): void
    {
        //
    }

    /**
     * Handle the UmrahJamaahPayment "restored" event.
     */
    public function restored(UmrahJamaahPayment $umrahJamaahPayment): void
    {
        //
    }

    /**
     * Handle the UmrahJamaahPayment "force deleted" event.
     */
    public function forceDeleted(UmrahJamaahPayment $umrahJamaahPayment): void
    {
        //
    }
}
